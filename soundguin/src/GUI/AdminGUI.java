/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Objects.Admin;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahmet
 */
public class AdminGUI extends javax.swing.JFrame {
    
    static Admin admin = new Admin();
    private DefaultTableModel userModel = null;
    private Object[] userData = null;
    private DefaultTableModel songModel = null;
    private Object[] songData = null;
    private DefaultTableModel albumModel = null;
    private Object[] albumData = null;
    private DefaultTableModel artistModel = null;
    private Object[] artistData = null;
    private DefaultTableModel subsModel = null;
    private Object[] subsData = null;
    private DefaultTableModel genreModel = null;
    private Object[] genreData = null;
    UserInsertionGUI userInsertionGUI;
    ArtistInsertionGUI artistInsertionGUI;
    SongInsertionGUI songInsertionGUI;
    AlbumInsertionGUI albumInsertionGUI;
    
    /**
     * Creates new form AdminGUI
     */
    public AdminGUI() {
        initComponents();
        setUserModel();
        setArtistModel();
        setSongModel();
        setAlbumModel();
        setSubsModel();
        setGenreModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlAdmin = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlUsers = new javax.swing.JPanel();
        scrllUsers = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        lblLogo = new javax.swing.JLabel();
        btnInsertUser = new javax.swing.JButton();
        fldID = new javax.swing.JTextField();
        btnDeleteUser = new javax.swing.JButton();
        lblIDUser = new javax.swing.JLabel();
        btnUpdateUser = new javax.swing.JButton();
        pnlSongs = new javax.swing.JPanel();
        scrllSongs = new javax.swing.JScrollPane();
        tblSongs = new javax.swing.JTable();
        lblLogoSong = new javax.swing.JLabel();
        btnInsertSong = new javax.swing.JButton();
        fldIDSong = new javax.swing.JTextField();
        btnDeleteSong = new javax.swing.JButton();
        lblIDSong = new javax.swing.JLabel();
        btnUpdateSong = new javax.swing.JButton();
        pnlArtists = new javax.swing.JPanel();
        scrllArtists = new javax.swing.JScrollPane();
        tblArtists = new javax.swing.JTable();
        lblLogoArtist = new javax.swing.JLabel();
        btnInsertArtist = new javax.swing.JButton();
        fldIDArtist = new javax.swing.JTextField();
        btnDeleteArtist = new javax.swing.JButton();
        lblIDArtist = new javax.swing.JLabel();
        btnUpdateArtist = new javax.swing.JButton();
        pnlAlbums = new javax.swing.JPanel();
        scrllAlbums = new javax.swing.JScrollPane();
        tblAlbums = new javax.swing.JTable();
        lblLogoAlbum = new javax.swing.JLabel();
        btnInsertAlbum = new javax.swing.JButton();
        fldIDAlbum = new javax.swing.JTextField();
        btnDeleteAlbum = new javax.swing.JButton();
        lblIDAlbum = new javax.swing.JLabel();
        btnUpdateAlbum = new javax.swing.JButton();
        pnlOthers = new javax.swing.JPanel();
        scrllSubs = new javax.swing.JScrollPane();
        tblSubs = new javax.swing.JTable();
        lblLogoOthers = new javax.swing.JLabel();
        lblSubs = new javax.swing.JLabel();
        lblGenres = new javax.swing.JLabel();
        scrllGenres = new javax.swing.JScrollPane();
        tblGenres = new javax.swing.JTable();
        lblPops = new javax.swing.JLabel();
        scrllPops = new javax.swing.JScrollPane();
        tblPops = new javax.swing.JTable();
        lblJazzes = new javax.swing.JLabel();
        scrllJazzes = new javax.swing.JScrollPane();
        tblJazzes = new javax.swing.JTable();
        lblClassics = new javax.swing.JLabel();
        scrllClassics = new javax.swing.JScrollPane();
        tblClassics = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Soundguin  Admin");
        setLocation(new java.awt.Point(275, 25));
        setResizable(false);

        pnlAdmin.setBackground(new java.awt.Color(204, 0, 204));

        pnlUsers.setBackground(new java.awt.Color(153, 0, 153));

        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrllUsers.setViewportView(tblUsers);

        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoSmall.png"))); // NOI18N

        btnInsertUser.setText("Yeni Ekle");
        btnInsertUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertUserActionPerformed(evt);
            }
        });

        fldID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        fldID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnDeleteUser.setText("Sil");
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        lblIDUser.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblIDUser.setForeground(new java.awt.Color(255, 255, 255));
        lblIDUser.setText("ID:");

        btnUpdateUser.setText("Güncelle");
        btnUpdateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlUsersLayout = new javax.swing.GroupLayout(pnlUsers);
        pnlUsers.setLayout(pnlUsersLayout);
        pnlUsersLayout.setHorizontalGroup(
            pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrllUsers, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE)
                    .addGroup(pnlUsersLayout.createSequentialGroup()
                        .addComponent(lblLogo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblIDUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldID, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteUser)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInsertUser)))
                .addContainerGap())
        );
        pnlUsersLayout.setVerticalGroup(
            pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLogo)
                    .addGroup(pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnInsertUser)
                        .addComponent(fldID, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDeleteUser)
                        .addComponent(lblIDUser, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUpdateUser)))
                .addGap(18, 18, 18)
                .addComponent(scrllUsers, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Kullanıcılar", pnlUsers);

        pnlSongs.setBackground(new java.awt.Color(153, 0, 153));

        tblSongs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrllSongs.setViewportView(tblSongs);

        lblLogoSong.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogoSong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoSmall.png"))); // NOI18N

        btnInsertSong.setText("Yeni Ekle");
        btnInsertSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertSongActionPerformed(evt);
            }
        });

        fldIDSong.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        fldIDSong.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnDeleteSong.setText("Sil");
        btnDeleteSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteSongActionPerformed(evt);
            }
        });

        lblIDSong.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblIDSong.setForeground(new java.awt.Color(255, 255, 255));
        lblIDSong.setText("ID:");

        btnUpdateSong.setText("Güncelle");
        btnUpdateSong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateSongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSongsLayout = new javax.swing.GroupLayout(pnlSongs);
        pnlSongs.setLayout(pnlSongsLayout);
        pnlSongsLayout.setHorizontalGroup(
            pnlSongsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSongsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSongsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrllSongs, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE)
                    .addGroup(pnlSongsLayout.createSequentialGroup()
                        .addComponent(lblLogoSong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblIDSong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldIDSong, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateSong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteSong)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInsertSong)))
                .addContainerGap())
        );
        pnlSongsLayout.setVerticalGroup(
            pnlSongsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSongsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSongsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLogoSong)
                    .addGroup(pnlSongsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnInsertSong)
                        .addComponent(fldIDSong, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDeleteSong)
                        .addComponent(lblIDSong, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUpdateSong)))
                .addGap(18, 18, 18)
                .addComponent(scrllSongs, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Şarkılar", pnlSongs);

        pnlArtists.setBackground(new java.awt.Color(153, 0, 153));

        tblArtists.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrllArtists.setViewportView(tblArtists);

        lblLogoArtist.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogoArtist.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoSmall.png"))); // NOI18N

        btnInsertArtist.setText("Yeni Ekle");
        btnInsertArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertArtistActionPerformed(evt);
            }
        });

        fldIDArtist.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        fldIDArtist.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnDeleteArtist.setText("Sil");
        btnDeleteArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteArtistActionPerformed(evt);
            }
        });

        lblIDArtist.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblIDArtist.setForeground(new java.awt.Color(255, 255, 255));
        lblIDArtist.setText("ID:");

        btnUpdateArtist.setText("Güncelle");
        btnUpdateArtist.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateArtistActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlArtistsLayout = new javax.swing.GroupLayout(pnlArtists);
        pnlArtists.setLayout(pnlArtistsLayout);
        pnlArtistsLayout.setHorizontalGroup(
            pnlArtistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlArtistsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlArtistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrllArtists, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE)
                    .addGroup(pnlArtistsLayout.createSequentialGroup()
                        .addComponent(lblLogoArtist)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblIDArtist)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldIDArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateArtist)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteArtist)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInsertArtist)))
                .addContainerGap())
        );
        pnlArtistsLayout.setVerticalGroup(
            pnlArtistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlArtistsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlArtistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLogoArtist)
                    .addGroup(pnlArtistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnInsertArtist)
                        .addComponent(btnDeleteArtist)
                        .addComponent(btnUpdateArtist)
                        .addComponent(fldIDArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblIDArtist, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(scrllArtists, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Sanatçılar", pnlArtists);

        pnlAlbums.setBackground(new java.awt.Color(153, 0, 153));

        tblAlbums.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrllAlbums.setViewportView(tblAlbums);

        lblLogoAlbum.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogoAlbum.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoSmall.png"))); // NOI18N

        btnInsertAlbum.setText("Yeni Ekle");
        btnInsertAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertAlbumActionPerformed(evt);
            }
        });

        fldIDAlbum.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        fldIDAlbum.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnDeleteAlbum.setText("Sil");
        btnDeleteAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAlbumActionPerformed(evt);
            }
        });

        lblIDAlbum.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblIDAlbum.setForeground(new java.awt.Color(255, 255, 255));
        lblIDAlbum.setText("ID:");

        btnUpdateAlbum.setText("Güncelle");
        btnUpdateAlbum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAlbumActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAlbumsLayout = new javax.swing.GroupLayout(pnlAlbums);
        pnlAlbums.setLayout(pnlAlbumsLayout);
        pnlAlbumsLayout.setHorizontalGroup(
            pnlAlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAlbumsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrllAlbums, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE)
                    .addGroup(pnlAlbumsLayout.createSequentialGroup()
                        .addComponent(lblLogoAlbum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblIDAlbum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldIDAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdateAlbum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeleteAlbum)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInsertAlbum)))
                .addContainerGap())
        );
        pnlAlbumsLayout.setVerticalGroup(
            pnlAlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAlbumsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlAlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblLogoAlbum)
                    .addGroup(pnlAlbumsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnInsertAlbum)
                        .addComponent(fldIDAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDeleteAlbum)
                        .addComponent(lblIDAlbum, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUpdateAlbum)))
                .addGap(18, 18, 18)
                .addComponent(scrllAlbums, javax.swing.GroupLayout.DEFAULT_SIZE, 592, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Albümler", pnlAlbums);

        pnlOthers.setBackground(new java.awt.Color(153, 0, 153));

        tblSubs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrllSubs.setViewportView(tblSubs);

        lblLogoOthers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogoOthers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoSmall.png"))); // NOI18N

        lblSubs.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblSubs.setForeground(new java.awt.Color(255, 255, 255));
        lblSubs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubs.setText("Abonelik Türü");

        lblGenres.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblGenres.setForeground(new java.awt.Color(255, 255, 255));
        lblGenres.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblGenres.setText("Şarkı Türü");

        tblGenres.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrllGenres.setViewportView(tblGenres);

        lblPops.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblPops.setForeground(new java.awt.Color(255, 255, 255));
        lblPops.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPops.setText("Pop Çalma Listeleri");

        tblPops.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrllPops.setViewportView(tblPops);

        lblJazzes.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblJazzes.setForeground(new java.awt.Color(255, 255, 255));
        lblJazzes.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblJazzes.setText("Jazz Çalma Listeleri");

        tblJazzes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrllJazzes.setViewportView(tblJazzes);

        lblClassics.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblClassics.setForeground(new java.awt.Color(255, 255, 255));
        lblClassics.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblClassics.setText("Klasik Çalma Listeleri");

        tblClassics.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrllClassics.setViewportView(tblClassics);

        javax.swing.GroupLayout pnlOthersLayout = new javax.swing.GroupLayout(pnlOthers);
        pnlOthers.setLayout(pnlOthersLayout);
        pnlOthersLayout.setHorizontalGroup(
            pnlOthersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOthersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOthersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrllSubs, javax.swing.GroupLayout.DEFAULT_SIZE, 955, Short.MAX_VALUE)
                    .addComponent(lblSubs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblGenres, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrllGenres)
                    .addComponent(lblPops, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrllPops)
                    .addComponent(lblJazzes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrllJazzes)
                    .addComponent(lblClassics, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlOthersLayout.createSequentialGroup()
                        .addComponent(lblLogoOthers)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scrllClassics))
                .addContainerGap())
        );
        pnlOthersLayout.setVerticalGroup(
            pnlOthersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOthersLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblLogoOthers)
                .addGap(18, 18, 18)
                .addComponent(lblSubs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllSubs, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblGenres)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllGenres, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblPops)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllPops, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblJazzes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllJazzes, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lblClassics)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllClassics, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Diğer Tablolar", pnlOthers);

        javax.swing.GroupLayout pnlAdminLayout = new javax.swing.GroupLayout(pnlAdmin);
        pnlAdmin.setLayout(pnlAdminLayout);
        pnlAdminLayout.setHorizontalGroup(
            pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );
        pnlAdminLayout.setVerticalGroup(
            pnlAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnInsertUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertUserActionPerformed
        userInsertionGUI = new UserInsertionGUI(this, 0, 0);
        userInsertionGUI.setVisible(true);
    }//GEN-LAST:event_btnInsertUserActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        boolean control = admin.deleteUser(Integer.parseInt(fldID.getText()));
        updateUserTable();
        
        if(control) {
            fldID.setText(null);
        }
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnInsertSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertSongActionPerformed
        songInsertionGUI = new SongInsertionGUI(this, 0, 0);
        songInsertionGUI.setVisible(true);
    }//GEN-LAST:event_btnInsertSongActionPerformed

    private void btnDeleteSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteSongActionPerformed
        boolean control = admin.deleteSong(Integer.parseInt(fldIDSong.getText()));
        updateSongTable();
        
        if(control) {
            fldIDSong.setText(null);
        }
    }//GEN-LAST:event_btnDeleteSongActionPerformed

    private void btnInsertArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertArtistActionPerformed
        artistInsertionGUI = new ArtistInsertionGUI(this, 0, 0);
        artistInsertionGUI.setVisible(true);
    }//GEN-LAST:event_btnInsertArtistActionPerformed

    private void btnDeleteArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteArtistActionPerformed
        boolean control = admin.deleteArtist(Integer.parseInt(fldIDArtist.getText()));
        updateArtistTable();
        
        if(control) {
            fldIDArtist.setText(null);
        }
    }//GEN-LAST:event_btnDeleteArtistActionPerformed

    private void btnInsertAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertAlbumActionPerformed
        albumInsertionGUI = new AlbumInsertionGUI(this, 0, 0);
        albumInsertionGUI.setVisible(true);
    }//GEN-LAST:event_btnInsertAlbumActionPerformed

    private void btnDeleteAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAlbumActionPerformed
        boolean control = admin.deleteAlbum(Integer.parseInt(fldIDAlbum.getText()));
        updateAlbumTable();
        
        if(control) {
            fldIDAlbum.setText(null);
        }
    }//GEN-LAST:event_btnDeleteAlbumActionPerformed

    private void btnUpdateArtistActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateArtistActionPerformed
        int id = Integer.parseInt(fldIDArtist.getText());
        artistInsertionGUI = new ArtistInsertionGUI(this, id, 1);
        artistInsertionGUI.setVisible(true);
    }//GEN-LAST:event_btnUpdateArtistActionPerformed

    private void btnUpdateAlbumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAlbumActionPerformed
        int id = Integer.parseInt(fldIDAlbum.getText());
        albumInsertionGUI = new AlbumInsertionGUI(this, id, 1);
        albumInsertionGUI.setVisible(true);
    }//GEN-LAST:event_btnUpdateAlbumActionPerformed

    private void btnUpdateSongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateSongActionPerformed
        int id = Integer.parseInt(fldIDSong.getText());
        songInsertionGUI = new SongInsertionGUI(this, id, 1);
        songInsertionGUI.setVisible(true);
    }//GEN-LAST:event_btnUpdateSongActionPerformed

    private void btnUpdateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateUserActionPerformed
        int id = Integer.parseInt(fldID.getText());
        userInsertionGUI = new UserInsertionGUI(this, id, 1);
        userInsertionGUI.setVisible(true);
    }//GEN-LAST:event_btnUpdateUserActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AdminGUI().setVisible(true);
            }
        });
    }
    
    private void setUserModel() {
        userModel = new DefaultTableModel();
        Object[] colUser = new Object[7];
        colUser[0] = "ID";
        colUser[1] = "Ad";
        colUser[2] = "Soyad";
        colUser[3] = "E-mail";
        colUser[4] = "Parola";
        colUser[5] = "Abonelik";
        colUser[6] = "Ülke";
        
        userModel.setColumnIdentifiers(colUser);
        userData = new Object[7];
        for(int i=0; i<admin.getUserList().size(); i++) {
            userData[0] = admin.getUserList().get(i).getId();
            userData[1] = admin.getUserList().get(i).getName();
            userData[2] = admin.getUserList().get(i).getSname();
            userData[3] = admin.getUserList().get(i).getEmail();
            userData[4] = admin.getUserList().get(i).getPassword();         
            userData[5] = admin.getUserList().get(i).getSubscription();              
            userData[6] = admin.getUserList().get(i).getCountry();
            userModel.addRow(userData);
        }
            
        tblUsers.setModel(userModel);
    }
    
    private void setSongModel() {
        songModel = new DefaultTableModel();
        Object[] colSong = new Object[8];
        colSong[0] = "ID";
        colSong[1] = "Ad";
        colSong[2] = "Tarih";
        colSong[3] = "Sanatçı";
        colSong[4] = "Albüm";
        colSong[5] = "Tür";
        colSong[6] = "Süre";
        colSong[7] = "Dinleme";
        
        songModel.setColumnIdentifiers(colSong);
        songData = new Object[8];
        for(int i=0; i<admin.getSongList().size(); i++) {
            songData[0] = admin.getSongList().get(i).getId();
            songData[1] = admin.getSongList().get(i).getName();
            songData[2] = admin.getSongList().get(i).getDate();
            songData[3] = admin.getSongList().get(i).getArtistID();
            songData[4] = admin.getSongList().get(i).getAlbumID();
            songData[5] = admin.getSongList().get(i).getGenreID();
            songData[6] = admin.getSongList().get(i).getDuration();
            songData[7] = admin.getSongList().get(i).getPlays();

            songModel.addRow(songData);
        }
            
        tblSongs.setModel(songModel);
    }
    
    private void setAlbumModel() {
        albumModel = new DefaultTableModel();
        Object[] colAlbum = new Object[6];
        colAlbum[0] = "ID";
        colAlbum[1] = "Ad";
        colAlbum[2] = "Tarih";
        colAlbum[3] = "Şarkı";
        colAlbum[4] = "Sanatçı";
        colAlbum[5] = "Tür";
        
        albumModel.setColumnIdentifiers(colAlbum);
        albumData = new Object[6];
        for(int i=0; i<admin.getAlbumList().size(); i++) {
            albumData[0] = admin.getAlbumList().get(i).getId();
            albumData[1] = admin.getAlbumList().get(i).getName();
            albumData[2] = admin.getAlbumList().get(i).getDate();
            albumData[3] = admin.getAlbumList().get(i).getSongID();
            albumData[4] = admin.getAlbumList().get(i).getArtistID();
            albumData[5] = admin.getAlbumList().get(i).getGenreID();


            albumModel.addRow(albumData);
        }
            
        tblAlbums.setModel(albumModel);
    }
    
    private void setArtistModel() {
        artistModel = new DefaultTableModel();
        Object[] colArtist = new Object[4];
        colArtist[0] = "ID";
        colArtist[1] = "Ad";
        colArtist[2] = "Soyad";
        colArtist[3] = "Ülke";
        
        artistModel.setColumnIdentifiers(colArtist);
        artistData = new Object[4];
        for(int i=0; i<admin.getArtistList().size(); i++) {
            artistData[0] = admin.getArtistList().get(i).getId();
            artistData[1] = admin.getArtistList().get(i).getName();
            artistData[2] = admin.getArtistList().get(i).getSname();
            artistData[3] = admin.getArtistList().get(i).getCountry();
        
            artistModel.addRow(artistData);
        }
            
        tblArtists.setModel(artistModel);
    }
    
    private void setSubsModel() {
        subsModel = new DefaultTableModel();
        Object[] colSubs = new Object[2];
        colSubs[0] = "ID";
        colSubs[1] = "Abonelik";
        
        subsModel.setColumnIdentifiers(colSubs);
        subsData = new Object[2];
        for(int i=0; i<admin.getSubsTypeList().size(); i++) {
            subsData[0] = admin.getSubsTypeList().get(i).getId();
            subsData[1] = admin.getSubsTypeList().get(i).getName();
            
            subsModel.addRow(subsData);
        }
        
        tblSubs.setModel(subsModel);
    }
    
    private void setGenreModel() {
        genreModel = new DefaultTableModel();
        Object[] colGenre = new Object[2];
        colGenre[0] = "ID";
        colGenre[1] = "Tür";
        
        genreModel.setColumnIdentifiers(colGenre);
        genreData = new Object[2];
        for(int i=0; i<admin.getGenreList().size(); i++) {
            genreData[0] = admin.getGenreList().get(i).getId();
            genreData[1] = admin.getGenreList().get(i).getName();
            
            genreModel.addRow(genreData);
        }
        
        tblGenres.setModel(genreModel);
    }
    
    public void updateUserTable() {
        DefaultTableModel clearModel = (DefaultTableModel)tblUsers.getModel();
        clearModel.setRowCount(0);
        
        for(int i=0; i<admin.getUserList().size(); i++) {
            userData[0] = admin.getUserList().get(i).getId();
            userData[1] = admin.getUserList().get(i).getName();
            userData[2] = admin.getUserList().get(i).getSname();
            userData[3] = admin.getUserList().get(i).getEmail();
            userData[4] = admin.getUserList().get(i).getPassword();
            userData[5] = admin.getUserList().get(i).getSubscription();
            userData[6] = admin.getUserList().get(i).getCountry();
            userModel.addRow(userData);
        }
    }
    
    public void updateArtistTable() {
        DefaultTableModel clearModel = (DefaultTableModel)tblArtists.getModel();
        clearModel.setRowCount(0);
        
        for(int i=0; i<admin.getArtistList().size(); i++) {
            artistData[0] = admin.getArtistList().get(i).getId();
            artistData[1] = admin.getArtistList().get(i).getName();
            artistData[2] = admin.getArtistList().get(i).getSname();
            artistData[3] = admin.getArtistList().get(i).getCountry();
            artistModel.addRow(artistData);
        }
    }
    
    public void updateSongTable() {
        DefaultTableModel clearModel = (DefaultTableModel)tblSongs.getModel();
        clearModel.setRowCount(0);
        
        for(int i=0; i<admin.getSongList().size(); i++) {
            songData[0] = admin.getSongList().get(i).getId();
            songData[1] = admin.getSongList().get(i).getName();
            songData[2] = admin.getSongList().get(i).getDate();
            songData[3] = admin.getSongList().get(i).getArtistID();
            songData[4] = admin.getSongList().get(i).getAlbumID();
            songData[5] = admin.getSongList().get(i).getGenreID();
            songData[6] = admin.getSongList().get(i).getDuration();
            songData[7] = admin.getSongList().get(i).getPlays();
            songModel.addRow(songData);
        }
    }
    
    public void updateAlbumTable() {
        DefaultTableModel clearModel = (DefaultTableModel)tblAlbums.getModel();
        clearModel.setRowCount(0);
        
        for(int i=0; i<admin.getAlbumList().size(); i++) {
            albumData[0] = admin.getAlbumList().get(i).getId();
            albumData[1] = admin.getAlbumList().get(i).getName();
            albumData[2] = admin.getAlbumList().get(i).getDate();
            albumData[3] = admin.getAlbumList().get(i).getSongID();
            albumData[4] = admin.getAlbumList().get(i).getArtistID();
            albumData[5] = admin.getAlbumList().get(i).getGenreID();
            albumModel.addRow(albumData);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeleteAlbum;
    private javax.swing.JButton btnDeleteArtist;
    private javax.swing.JButton btnDeleteSong;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnInsertAlbum;
    private javax.swing.JButton btnInsertArtist;
    private javax.swing.JButton btnInsertSong;
    private javax.swing.JButton btnInsertUser;
    private javax.swing.JButton btnUpdateAlbum;
    private javax.swing.JButton btnUpdateArtist;
    private javax.swing.JButton btnUpdateSong;
    private javax.swing.JButton btnUpdateUser;
    private javax.swing.JTextField fldID;
    private javax.swing.JTextField fldIDAlbum;
    private javax.swing.JTextField fldIDArtist;
    private javax.swing.JTextField fldIDSong;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblClassics;
    private javax.swing.JLabel lblGenres;
    private javax.swing.JLabel lblIDAlbum;
    private javax.swing.JLabel lblIDArtist;
    private javax.swing.JLabel lblIDSong;
    private javax.swing.JLabel lblIDUser;
    private javax.swing.JLabel lblJazzes;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblLogoAlbum;
    private javax.swing.JLabel lblLogoArtist;
    private javax.swing.JLabel lblLogoOthers;
    private javax.swing.JLabel lblLogoSong;
    private javax.swing.JLabel lblPops;
    private javax.swing.JLabel lblSubs;
    private javax.swing.JPanel pnlAdmin;
    private javax.swing.JPanel pnlAlbums;
    private javax.swing.JPanel pnlArtists;
    private javax.swing.JPanel pnlOthers;
    private javax.swing.JPanel pnlSongs;
    private javax.swing.JPanel pnlUsers;
    private javax.swing.JScrollPane scrllAlbums;
    private javax.swing.JScrollPane scrllArtists;
    private javax.swing.JScrollPane scrllClassics;
    private javax.swing.JScrollPane scrllGenres;
    private javax.swing.JScrollPane scrllJazzes;
    private javax.swing.JScrollPane scrllPops;
    private javax.swing.JScrollPane scrllSongs;
    private javax.swing.JScrollPane scrllSubs;
    private javax.swing.JScrollPane scrllUsers;
    private javax.swing.JTable tblAlbums;
    private javax.swing.JTable tblArtists;
    private javax.swing.JTable tblClassics;
    private javax.swing.JTable tblGenres;
    private javax.swing.JTable tblJazzes;
    private javax.swing.JTable tblPops;
    private javax.swing.JTable tblSongs;
    private javax.swing.JTable tblSubs;
    private javax.swing.JTable tblUsers;
    // End of variables declaration//GEN-END:variables
}
