/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Objects.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author ahmet
 */
public class UserGUI extends javax.swing.JFrame {

    static Admin admin = new Admin();
    User user;
    
    private DefaultTableModel songModel = null;
    private Object[] songData = null;
    private DefaultTableModel userModel = null;
    private Object[] userData = null;
    private DefaultTableModel followModel = null;
    private Object[] followData = null;
    private DefaultTableModel popModel = null;
    private Object[] popData = null;
    private DefaultTableModel jazzModel = null;
    private Object[] jazzData = null;
    private DefaultTableModel classicModel = null;
    private Object[] classicData = null;
    private DefaultTableModel folPopModel = null;
    private Object[] folPopData = null;
    private DefaultTableModel folJazzModel = null;
    private Object[] folJazzData = null;
    private DefaultTableModel folClassicModel = null;
    private Object[] folClassicData = null;
    private DefaultTableModel top10Model = null;
    private Object[] top10Data = null;
    private DefaultTableModel top10AllModel = null;
    private Object[] top10AllData = null;
    private DefaultTableModel top10PopModel = null;
    private Object[] top10PopData = null;
    private DefaultTableModel top10JazzModel = null;
    private Object[] top10JazzData = null;
    private DefaultTableModel top10ClassicModel = null;
    private Object[] top10ClassicData = null;
    
    /**
     * Creates new form UserGUI
     */
    public UserGUI(User user) {
        this.user = user;
        initComponents();
        setSongModel();
        setUserModel();
        setFollowModel();
        setPopModel();
        setJazzModel();
        setClassicModel();
        setFolPopModel();
        setFolJazzModel();
        setFolClassicModel();
        setTop10Model();
        setTop10AllModel();
        setTop10PopModel();
        setTop10JazzModel();
        setTop10ClassicModel();
        
        lblUsername.setText(user.getName()+user.getSname());
        if(user.getSubscription()==1) {
            lblSubs.setText("Premium Hesap");
        } else {
            lblSubs.setText("Normal Hesap");
        }
    }
    
    public UserGUI() {
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlUser = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        pnlSongs = new javax.swing.JPanel();
        btnSongsAdd = new javax.swing.JButton();
        fldSongsID = new javax.swing.JTextField();
        lblSongsID = new javax.swing.JLabel();
        scrllSongs = new javax.swing.JScrollPane();
        tblSongs = new javax.swing.JTable();
        pnlSongsPlay = new javax.swing.JPanel();
        lblSongsPlayName = new javax.swing.JLabel();
        lblSongsPlayDrt = new javax.swing.JLabel();
        btnSongsPlay = new javax.swing.JButton();
        pnlPlaylists = new javax.swing.JPanel();
        lblPlaylistPop = new javax.swing.JLabel();
        scrllPlaylistPop = new javax.swing.JScrollPane();
        tblPlaylistPop = new javax.swing.JTable();
        lblPlaylistJazz = new javax.swing.JLabel();
        scrllPlaylistJazz = new javax.swing.JScrollPane();
        tblPlaylistJazz = new javax.swing.JTable();
        lblPlaylistClassic = new javax.swing.JLabel();
        scrllPlaylistClassic = new javax.swing.JScrollPane();
        tblPlaylistClassic = new javax.swing.JTable();
        btnPlaylistPop = new javax.swing.JButton();
        fldPlaylistPopID = new javax.swing.JTextField();
        lblPlaylistPopID = new javax.swing.JLabel();
        btnPlaylistJazz = new javax.swing.JButton();
        fldPlaylistJazzID = new javax.swing.JTextField();
        lblPlaylistJazzID = new javax.swing.JLabel();
        btnPlaylistClassic = new javax.swing.JButton();
        fldPlaylistClassicID = new javax.swing.JTextField();
        lblPlaylistClassicID = new javax.swing.JLabel();
        pnlFollowings = new javax.swing.JPanel();
        scrllFolPop = new javax.swing.JScrollPane();
        tblFolPop = new javax.swing.JTable();
        lblFolPop = new javax.swing.JLabel();
        lblFolPopID = new javax.swing.JLabel();
        btnFolPopAdd = new javax.swing.JButton();
        fldFolPopID = new javax.swing.JTextField();
        btnFolPopAllAdd = new javax.swing.JButton();
        lblFolJazz = new javax.swing.JLabel();
        lblFolJazzID = new javax.swing.JLabel();
        btnFolJazzAdd = new javax.swing.JButton();
        fldFolJazzID = new javax.swing.JTextField();
        scrllFolJazz = new javax.swing.JScrollPane();
        tblFolJazz = new javax.swing.JTable();
        btnFolJazzAllAdd = new javax.swing.JButton();
        lblFolClassics = new javax.swing.JLabel();
        lblFolClasID = new javax.swing.JLabel();
        fldFolClasID = new javax.swing.JTextField();
        btnFolClasAdd = new javax.swing.JButton();
        scrllFolClas = new javax.swing.JScrollPane();
        tblFolClass = new javax.swing.JTable();
        btnFolClasAllAdd = new javax.swing.JButton();
        btnFolUsers = new javax.swing.JButton();
        fldFolUsersID = new javax.swing.JTextField();
        lblFolUsersID = new javax.swing.JLabel();
        scrllFolUsers = new javax.swing.JScrollPane();
        tblFolUsers = new javax.swing.JTable();
        pnlUsers = new javax.swing.JPanel();
        scrllUsers = new javax.swing.JScrollPane();
        tblUsers = new javax.swing.JTable();
        lblUserID = new javax.swing.JLabel();
        fldUserID = new javax.swing.JTextField();
        btnUserAdd = new javax.swing.JButton();
        pnlTop10 = new javax.swing.JPanel();
        btnTop10 = new javax.swing.JButton();
        fldTop10ID = new javax.swing.JTextField();
        lblTop10ID = new javax.swing.JLabel();
        scrllTop10 = new javax.swing.JScrollPane();
        tblTop10 = new javax.swing.JTable();
        lblTop10Country = new javax.swing.JLabel();
        btnTop10All = new javax.swing.JButton();
        fldTop10All = new javax.swing.JTextField();
        lblTop10All = new javax.swing.JLabel();
        scrllTop10All = new javax.swing.JScrollPane();
        tblTop10All = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        pnlTop10Playlists = new javax.swing.JPanel();
        lblTop10PlaylistPop = new javax.swing.JLabel();
        scrllTop10PlaylistPop = new javax.swing.JScrollPane();
        tblTop10PlaylistPop = new javax.swing.JTable();
        lblTop10PlaylistJazz = new javax.swing.JLabel();
        scrllTop10PlaylistJazz = new javax.swing.JScrollPane();
        tblTop10PlaylistJazz = new javax.swing.JTable();
        lblTop10PlaylistClassic = new javax.swing.JLabel();
        scrllTop10PlaylistClassic = new javax.swing.JScrollPane();
        tblTop10PlaylistClassic = new javax.swing.JTable();
        btnTop10PlaylistPop = new javax.swing.JButton();
        fldTop10PlaylistPopID = new javax.swing.JTextField();
        lblTop10PlaylistPopID = new javax.swing.JLabel();
        btnTop10PlaylistJazz = new javax.swing.JButton();
        fldTop10PlaylistJazzID = new javax.swing.JTextField();
        lblTop10PlaylistJazzID = new javax.swing.JLabel();
        btnTop10PlaylistClassic = new javax.swing.JButton();
        fldTop10PlaylistClassicID = new javax.swing.JTextField();
        lblTop10PlaylistClassicID = new javax.swing.JLabel();
        lblLogo = new javax.swing.JLabel();
        lblSoundguin = new javax.swing.JLabel();
        pnlWelcome = new javax.swing.JPanel();
        lblWelcome = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblSubs = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Soundguin");
        setLocation(new java.awt.Point(275, 25));
        setResizable(false);

        pnlUser.setBackground(new java.awt.Color(204, 0, 204));

        pnlSongs.setBackground(new java.awt.Color(153, 0, 153));

        btnSongsAdd.setText("Listeme Ekle");
        btnSongsAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSongsAddActionPerformed(evt);
            }
        });

        fldSongsID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblSongsID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblSongsID.setForeground(new java.awt.Color(255, 255, 255));
        lblSongsID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSongsID.setText("ID:");

        tblSongs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblSongs.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSongsMouseClicked(evt);
            }
        });
        scrllSongs.setViewportView(tblSongs);

        pnlSongsPlay.setBackground(new java.awt.Color(102, 0, 102));

        lblSongsPlayName.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblSongsPlayName.setForeground(new java.awt.Color(255, 255, 255));
        lblSongsPlayName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSongsPlayName.setText("...");

        lblSongsPlayDrt.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblSongsPlayDrt.setForeground(new java.awt.Color(255, 255, 255));
        lblSongsPlayDrt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSongsPlayDrt.setText("...");

        btnSongsPlay.setText("Çal");

        javax.swing.GroupLayout pnlSongsPlayLayout = new javax.swing.GroupLayout(pnlSongsPlay);
        pnlSongsPlay.setLayout(pnlSongsPlayLayout);
        pnlSongsPlayLayout.setHorizontalGroup(
            pnlSongsPlayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSongsPlayLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSongsPlayName, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnSongsPlay, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(lblSongsPlayDrt, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlSongsPlayLayout.setVerticalGroup(
            pnlSongsPlayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlSongsPlayLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSongsPlayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblSongsPlayName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlSongsPlayLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblSongsPlayDrt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSongsPlay, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlSongsLayout = new javax.swing.GroupLayout(pnlSongs);
        pnlSongs.setLayout(pnlSongsLayout);
        pnlSongsLayout.setHorizontalGroup(
            pnlSongsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSongsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSongsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSongsPlay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlSongsLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblSongsID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldSongsID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSongsAdd))
                    .addComponent(scrllSongs))
                .addContainerGap())
        );
        pnlSongsLayout.setVerticalGroup(
            pnlSongsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSongsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSongsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSongsAdd)
                    .addComponent(fldSongsID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSongsID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllSongs, javax.swing.GroupLayout.PREFERRED_SIZE, 502, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSongsPlay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Şarkılar", pnlSongs);

        pnlPlaylists.setBackground(new java.awt.Color(153, 0, 153));

        lblPlaylistPop.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblPlaylistPop.setForeground(new java.awt.Color(255, 255, 255));
        lblPlaylistPop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlaylistPop.setText("Pop");

        tblPlaylistPop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPlaylistPop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPlaylistPopMouseClicked(evt);
            }
        });
        scrllPlaylistPop.setViewportView(tblPlaylistPop);

        lblPlaylistJazz.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblPlaylistJazz.setForeground(new java.awt.Color(255, 255, 255));
        lblPlaylistJazz.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlaylistJazz.setText("Jazz");

        tblPlaylistJazz.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPlaylistJazz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPlaylistJazzMouseClicked(evt);
            }
        });
        scrllPlaylistJazz.setViewportView(tblPlaylistJazz);

        lblPlaylistClassic.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblPlaylistClassic.setForeground(new java.awt.Color(255, 255, 255));
        lblPlaylistClassic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlaylistClassic.setText("Klasik");

        tblPlaylistClassic.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblPlaylistClassic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPlaylistClassicMouseClicked(evt);
            }
        });
        scrllPlaylistClassic.setViewportView(tblPlaylistClassic);

        btnPlaylistPop.setText("Kaldır");
        btnPlaylistPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaylistPopActionPerformed(evt);
            }
        });

        fldPlaylistPopID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblPlaylistPopID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblPlaylistPopID.setForeground(new java.awt.Color(255, 255, 255));
        lblPlaylistPopID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlaylistPopID.setText("ID:");

        btnPlaylistJazz.setText("Kaldır");
        btnPlaylistJazz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaylistJazzActionPerformed(evt);
            }
        });

        fldPlaylistJazzID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblPlaylistJazzID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblPlaylistJazzID.setForeground(new java.awt.Color(255, 255, 255));
        lblPlaylistJazzID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlaylistJazzID.setText("ID:");

        btnPlaylistClassic.setText("Kaldır");
        btnPlaylistClassic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlaylistClassicActionPerformed(evt);
            }
        });

        fldPlaylistClassicID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblPlaylistClassicID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblPlaylistClassicID.setForeground(new java.awt.Color(255, 255, 255));
        lblPlaylistClassicID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPlaylistClassicID.setText("ID:");

        javax.swing.GroupLayout pnlPlaylistsLayout = new javax.swing.GroupLayout(pnlPlaylists);
        pnlPlaylists.setLayout(pnlPlaylistsLayout);
        pnlPlaylistsLayout.setHorizontalGroup(
            pnlPlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPlaylistsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrllPlaylistPop, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                    .addComponent(scrllPlaylistJazz)
                    .addComponent(scrllPlaylistClassic)
                    .addGroup(pnlPlaylistsLayout.createSequentialGroup()
                        .addComponent(lblPlaylistPop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPlaylistPopID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldPlaylistPopID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPlaylistPop))
                    .addGroup(pnlPlaylistsLayout.createSequentialGroup()
                        .addComponent(lblPlaylistJazz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPlaylistJazzID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldPlaylistJazzID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPlaylistJazz))
                    .addGroup(pnlPlaylistsLayout.createSequentialGroup()
                        .addComponent(lblPlaylistClassic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPlaylistClassicID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldPlaylistClassicID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPlaylistClassic)))
                .addContainerGap())
        );
        pnlPlaylistsLayout.setVerticalGroup(
            pnlPlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPlaylistsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlPlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlaylistPop)
                    .addComponent(btnPlaylistPop)
                    .addComponent(fldPlaylistPopID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPlaylistPopID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllPlaylistPop, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlPlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlaylistJazz)
                    .addComponent(btnPlaylistJazz)
                    .addComponent(fldPlaylistJazzID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPlaylistJazzID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllPlaylistJazz, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlPlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPlaylistClassic)
                    .addComponent(btnPlaylistClassic)
                    .addComponent(fldPlaylistClassicID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPlaylistClassicID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllPlaylistClassic, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Çalma Listelerim", pnlPlaylists);

        pnlFollowings.setBackground(new java.awt.Color(153, 0, 153));

        tblFolPop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblFolPop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFolPopMouseClicked(evt);
            }
        });
        scrllFolPop.setViewportView(tblFolPop);

        lblFolPop.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblFolPop.setForeground(new java.awt.Color(255, 255, 255));
        lblFolPop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFolPop.setText("Pop");

        lblFolPopID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblFolPopID.setForeground(new java.awt.Color(255, 255, 255));
        lblFolPopID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFolPopID.setText("ID:");

        btnFolPopAdd.setText("Listeme Ekle");
        btnFolPopAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFolPopAddActionPerformed(evt);
            }
        });

        fldFolPopID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnFolPopAllAdd.setText("Hepsini Listeme Ekle");
        btnFolPopAllAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFolPopAllAddActionPerformed(evt);
            }
        });

        lblFolJazz.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblFolJazz.setForeground(new java.awt.Color(255, 255, 255));
        lblFolJazz.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFolJazz.setText("Jazz");

        lblFolJazzID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblFolJazzID.setForeground(new java.awt.Color(255, 255, 255));
        lblFolJazzID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFolJazzID.setText("ID:");

        btnFolJazzAdd.setText("Listeme Ekle");
        btnFolJazzAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFolJazzAddActionPerformed(evt);
            }
        });

        fldFolJazzID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tblFolJazz.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblFolJazz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFolJazzMouseClicked(evt);
            }
        });
        scrllFolJazz.setViewportView(tblFolJazz);

        btnFolJazzAllAdd.setText("Hepsini Listeme Ekle");
        btnFolJazzAllAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFolJazzAllAddActionPerformed(evt);
            }
        });

        lblFolClassics.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblFolClassics.setForeground(new java.awt.Color(255, 255, 255));
        lblFolClassics.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFolClassics.setText("Klasik");

        lblFolClasID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblFolClasID.setForeground(new java.awt.Color(255, 255, 255));
        lblFolClasID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFolClasID.setText("ID:");

        fldFolClasID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnFolClasAdd.setText("Listeme Ekle");
        btnFolClasAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFolClasAddActionPerformed(evt);
            }
        });

        tblFolClass.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblFolClass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFolClassMouseClicked(evt);
            }
        });
        scrllFolClas.setViewportView(tblFolClass);

        btnFolClasAllAdd.setText("Hepsini Listeme Ekle");
        btnFolClasAllAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFolClasAllAddActionPerformed(evt);
            }
        });

        btnFolUsers.setText("Kaldır");
        btnFolUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFolUsersActionPerformed(evt);
            }
        });

        fldFolUsersID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblFolUsersID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblFolUsersID.setForeground(new java.awt.Color(255, 255, 255));
        lblFolUsersID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFolUsersID.setText("ID:");

        tblFolUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblFolUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblFolUsersMouseClicked(evt);
            }
        });
        scrllFolUsers.setViewportView(tblFolUsers);

        javax.swing.GroupLayout pnlFollowingsLayout = new javax.swing.GroupLayout(pnlFollowings);
        pnlFollowings.setLayout(pnlFollowingsLayout);
        pnlFollowingsLayout.setHorizontalGroup(
            pnlFollowingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFollowingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFollowingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlFollowingsLayout.createSequentialGroup()
                        .addComponent(lblFolUsersID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldFolUsersID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFolUsers))
                    .addComponent(scrllFolUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 393, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFollowingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrllFolPop, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(lblFolPop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnFolPopAllAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFolJazz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrllFolJazz, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnFolJazzAllAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblFolClassics, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrllFolClas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnFolClasAllAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFollowingsLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 135, Short.MAX_VALUE)
                        .addGroup(pnlFollowingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFollowingsLayout.createSequentialGroup()
                                .addComponent(lblFolClasID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(fldFolClasID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFolClasAdd))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFollowingsLayout.createSequentialGroup()
                                .addComponent(lblFolPopID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(fldFolPopID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFolPopAdd))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlFollowingsLayout.createSequentialGroup()
                                .addComponent(lblFolJazzID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addComponent(fldFolJazzID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnFolJazzAdd)))))
                .addContainerGap())
        );
        pnlFollowingsLayout.setVerticalGroup(
            pnlFollowingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFollowingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlFollowingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblFolPop)
                    .addComponent(btnFolUsers)
                    .addComponent(fldFolUsersID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFolUsersID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlFollowingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFollowingsLayout.createSequentialGroup()
                        .addGroup(pnlFollowingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFolPopAdd)
                            .addComponent(lblFolPopID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fldFolPopID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrllFolPop, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFolPopAllAdd)
                        .addGap(18, 18, 18)
                        .addComponent(lblFolJazz)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlFollowingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnFolJazzAdd)
                            .addComponent(lblFolJazzID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(fldFolJazzID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrllFolJazz, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFolJazzAllAdd)
                        .addGap(18, 18, 18)
                        .addComponent(lblFolClassics)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlFollowingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(fldFolClasID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnFolClasAdd)
                            .addComponent(lblFolClasID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(scrllFolClas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFolClasAllAdd))
                    .addComponent(scrllFolUsers, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE))
                .addContainerGap())
        );

        jTabbedPane1.addTab("Takip Ettiklerim", pnlFollowings);

        pnlUsers.setBackground(new java.awt.Color(153, 0, 153));

        tblUsers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblUsersMouseClicked(evt);
            }
        });
        scrllUsers.setViewportView(tblUsers);

        lblUserID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblUserID.setForeground(new java.awt.Color(255, 255, 255));
        lblUserID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUserID.setText("ID:");

        fldUserID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnUserAdd.setText("Takip Et");
        btnUserAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUserAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlUsersLayout = new javax.swing.GroupLayout(pnlUsers);
        pnlUsers.setLayout(pnlUsersLayout);
        pnlUsersLayout.setHorizontalGroup(
            pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrllUsers, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUsersLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lblUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUserAdd)))
                .addContainerGap())
        );
        pnlUsersLayout.setVerticalGroup(
            pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlUsersLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUserAdd)
                    .addComponent(fldUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblUserID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllUsers, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Bütün Kullanıcılar", pnlUsers);

        pnlTop10.setBackground(new java.awt.Color(153, 0, 153));

        btnTop10.setText("Listeme Ekle");
        btnTop10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTop10ActionPerformed(evt);
            }
        });

        fldTop10ID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblTop10ID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblTop10ID.setForeground(new java.awt.Color(255, 255, 255));
        lblTop10ID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTop10ID.setText("ID:");

        tblTop10.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTop10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTop10MouseClicked(evt);
            }
        });
        scrllTop10.setViewportView(tblTop10);

        lblTop10Country.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblTop10Country.setForeground(new java.awt.Color(255, 255, 255));
        lblTop10Country.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTop10Country.setText("...");

        btnTop10All.setText("Listeme Ekle");
        btnTop10All.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTop10AllActionPerformed(evt);
            }
        });

        fldTop10All.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblTop10All.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblTop10All.setForeground(new java.awt.Color(255, 255, 255));
        lblTop10All.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTop10All.setText("ID:");

        tblTop10All.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTop10All.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTop10AllMouseClicked(evt);
            }
        });
        scrllTop10All.setViewportView(tblTop10All);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Bütün Şarkılar");

        javax.swing.GroupLayout pnlTop10Layout = new javax.swing.GroupLayout(pnlTop10);
        pnlTop10.setLayout(pnlTop10Layout);
        pnlTop10Layout.setHorizontalGroup(
            pnlTop10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTop10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTop10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrllTop10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTop10Layout.createSequentialGroup()
                        .addComponent(lblTop10Country, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTop10ID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldTop10ID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTop10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTop10Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTop10All, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldTop10All, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTop10All))
                    .addComponent(scrllTop10All, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnlTop10Layout.setVerticalGroup(
            pnlTop10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTop10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTop10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlTop10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTop10)
                        .addComponent(fldTop10ID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblTop10ID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTop10Country, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllTop10, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlTop10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlTop10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnTop10All)
                        .addComponent(fldTop10All, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblTop10All))
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllTop10All, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Top10 Ülke/Hepsi", pnlTop10);

        pnlTop10Playlists.setBackground(new java.awt.Color(153, 0, 153));

        lblTop10PlaylistPop.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblTop10PlaylistPop.setForeground(new java.awt.Color(255, 255, 255));
        lblTop10PlaylistPop.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTop10PlaylistPop.setText("Pop");

        tblTop10PlaylistPop.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTop10PlaylistPop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTop10PlaylistPopMouseClicked(evt);
            }
        });
        scrllTop10PlaylistPop.setViewportView(tblTop10PlaylistPop);

        lblTop10PlaylistJazz.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblTop10PlaylistJazz.setForeground(new java.awt.Color(255, 255, 255));
        lblTop10PlaylistJazz.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTop10PlaylistJazz.setText("Jazz");

        tblTop10PlaylistJazz.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTop10PlaylistJazz.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTop10PlaylistJazzMouseClicked(evt);
            }
        });
        scrllTop10PlaylistJazz.setViewportView(tblTop10PlaylistJazz);

        lblTop10PlaylistClassic.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblTop10PlaylistClassic.setForeground(new java.awt.Color(255, 255, 255));
        lblTop10PlaylistClassic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTop10PlaylistClassic.setText("Klasik");

        tblTop10PlaylistClassic.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblTop10PlaylistClassic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTop10PlaylistClassicMouseClicked(evt);
            }
        });
        scrllTop10PlaylistClassic.setViewportView(tblTop10PlaylistClassic);

        btnTop10PlaylistPop.setText("Listeme Ekle");
        btnTop10PlaylistPop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTop10PlaylistPopActionPerformed(evt);
            }
        });

        fldTop10PlaylistPopID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblTop10PlaylistPopID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblTop10PlaylistPopID.setForeground(new java.awt.Color(255, 255, 255));
        lblTop10PlaylistPopID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTop10PlaylistPopID.setText("ID:");

        btnTop10PlaylistJazz.setText("Listeme Ekle");
        btnTop10PlaylistJazz.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTop10PlaylistJazzActionPerformed(evt);
            }
        });

        fldTop10PlaylistJazzID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblTop10PlaylistJazzID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblTop10PlaylistJazzID.setForeground(new java.awt.Color(255, 255, 255));
        lblTop10PlaylistJazzID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTop10PlaylistJazzID.setText("ID:");

        btnTop10PlaylistClassic.setText("Listeme Ekle");
        btnTop10PlaylistClassic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTop10PlaylistClassicActionPerformed(evt);
            }
        });

        fldTop10PlaylistClassicID.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lblTop10PlaylistClassicID.setFont(new java.awt.Font("Verdana", 1, 10)); // NOI18N
        lblTop10PlaylistClassicID.setForeground(new java.awt.Color(255, 255, 255));
        lblTop10PlaylistClassicID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTop10PlaylistClassicID.setText("ID:");

        javax.swing.GroupLayout pnlTop10PlaylistsLayout = new javax.swing.GroupLayout(pnlTop10Playlists);
        pnlTop10Playlists.setLayout(pnlTop10PlaylistsLayout);
        pnlTop10PlaylistsLayout.setHorizontalGroup(
            pnlTop10PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTop10PlaylistsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTop10PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrllTop10PlaylistPop, javax.swing.GroupLayout.DEFAULT_SIZE, 725, Short.MAX_VALUE)
                    .addComponent(scrllTop10PlaylistJazz)
                    .addComponent(scrllTop10PlaylistClassic)
                    .addGroup(pnlTop10PlaylistsLayout.createSequentialGroup()
                        .addComponent(lblTop10PlaylistPop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTop10PlaylistPopID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldTop10PlaylistPopID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTop10PlaylistPop))
                    .addGroup(pnlTop10PlaylistsLayout.createSequentialGroup()
                        .addComponent(lblTop10PlaylistJazz, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTop10PlaylistJazzID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldTop10PlaylistJazzID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTop10PlaylistJazz))
                    .addGroup(pnlTop10PlaylistsLayout.createSequentialGroup()
                        .addComponent(lblTop10PlaylistClassic, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTop10PlaylistClassicID, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fldTop10PlaylistClassicID, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTop10PlaylistClassic)))
                .addContainerGap())
        );
        pnlTop10PlaylistsLayout.setVerticalGroup(
            pnlTop10PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTop10PlaylistsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTop10PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTop10PlaylistPop)
                    .addComponent(btnTop10PlaylistPop)
                    .addComponent(fldTop10PlaylistPopID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTop10PlaylistPopID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllTop10PlaylistPop, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlTop10PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTop10PlaylistJazz)
                    .addComponent(btnTop10PlaylistJazz)
                    .addComponent(fldTop10PlaylistJazzID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTop10PlaylistJazzID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllTop10PlaylistJazz, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlTop10PlaylistsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTop10PlaylistClassic)
                    .addComponent(btnTop10PlaylistClassic)
                    .addComponent(fldTop10PlaylistClassicID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTop10PlaylistClassicID))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrllTop10PlaylistClassic, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Top10 Çalma Listeleri", pnlTop10Playlists);

        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/logoSmall.png"))); // NOI18N

        lblSoundguin.setFont(new java.awt.Font("OCR A Extended", 1, 48)); // NOI18N
        lblSoundguin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSoundguin.setText("SOUNDGUIN");

        pnlWelcome.setBackground(new java.awt.Color(102, 0, 102));

        lblWelcome.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        lblWelcome.setForeground(new java.awt.Color(255, 255, 255));
        lblWelcome.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblWelcome.setText("Hoşgeldiniz!");

        lblUsername.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(255, 255, 255));
        lblUsername.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsername.setText(".");

        lblSubs.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        lblSubs.setForeground(new java.awt.Color(255, 255, 255));
        lblSubs.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblSubs.setText(".");

        javax.swing.GroupLayout pnlWelcomeLayout = new javax.swing.GroupLayout(pnlWelcome);
        pnlWelcome.setLayout(pnlWelcomeLayout);
        pnlWelcomeLayout.setHorizontalGroup(
            pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWelcomeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(lblUsername, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSubs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlWelcomeLayout.setVerticalGroup(
            pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWelcomeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblWelcome)
                .addGap(18, 18, 18)
                .addComponent(lblUsername)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSubs)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlUserLayout = new javax.swing.GroupLayout(pnlUser);
        pnlUser.setLayout(pnlUserLayout);
        pnlUserLayout.setHorizontalGroup(
            pnlUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlUserLayout.createSequentialGroup()
                        .addComponent(lblLogo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblSoundguin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 750, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlUserLayout.setVerticalGroup(
            pnlUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlUserLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblSoundguin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addComponent(pnlWelcome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnTop10PlaylistClassicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTop10PlaylistClassicActionPerformed
        int songId = Integer.parseInt(fldTop10PlaylistClassicID.getText());
        boolean control = admin.insertClassic(this.user.getId(), songId);
        updateClassicModel();

        if(control) {
            fldTop10PlaylistClassicID.setText(null);
        }
    }//GEN-LAST:event_btnTop10PlaylistClassicActionPerformed

    private void btnTop10PlaylistJazzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTop10PlaylistJazzActionPerformed
        int songId = Integer.parseInt(fldTop10PlaylistJazzID.getText());
        boolean control = admin.insertJazz(this.user.getId(), songId);
        updateJazzModel();

        if(control) {
            fldTop10PlaylistJazzID.setText(null);
        }
    }//GEN-LAST:event_btnTop10PlaylistJazzActionPerformed

    private void btnTop10PlaylistPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTop10PlaylistPopActionPerformed
        int songId = Integer.parseInt(fldTop10PlaylistPopID.getText());
        boolean control = admin.insertPop(this.user.getId(), songId);
        updatePopModel();

        if(control) {
            fldTop10PlaylistPopID.setText(null);
        }
    }//GEN-LAST:event_btnTop10PlaylistPopActionPerformed

    private void tblTop10PlaylistClassicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTop10PlaylistClassicMouseClicked
        fldTop10PlaylistClassicID.setText(tblTop10PlaylistClassic.getValueAt(tblTop10PlaylistClassic.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblTop10PlaylistClassicMouseClicked

    private void tblTop10PlaylistJazzMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTop10PlaylistJazzMouseClicked
        fldTop10PlaylistJazzID.setText(tblTop10PlaylistJazz.getValueAt(tblTop10PlaylistJazz.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblTop10PlaylistJazzMouseClicked

    private void tblTop10PlaylistPopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTop10PlaylistPopMouseClicked
        fldTop10PlaylistPopID.setText(tblTop10PlaylistPop.getValueAt(tblTop10PlaylistPop.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblTop10PlaylistPopMouseClicked

    private void tblTop10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTop10MouseClicked
        fldTop10ID.setText(tblTop10.getValueAt(tblTop10.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblTop10MouseClicked

    private void btnTop10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTop10ActionPerformed
        Song song = admin.getSong(Integer.parseInt(fldTop10ID.getText()));

        if(song.getGenreID() == 1) {
            int songId = Integer.parseInt(fldTop10ID.getText());
            boolean control = admin.insertPop(this.user.getId(), songId);
            updatePopModel();

            if(control) {
                fldTop10ID.setText(null);
            }
        } else if(song.getGenreID()==2) {
            int songId = Integer.parseInt(fldTop10ID.getText());
            boolean control = admin.insertJazz(this.user.getId(), songId);
            updateJazzModel();

            if(control) {
                fldTop10ID.setText(null);
            }
        } else {
            int songId = Integer.parseInt(fldTop10ID.getText());
            boolean control = admin.insertClassic(this.user.getId(), songId);
            updateClassicModel();

            if(control) {
                fldTop10ID.setText(null);
            }
        }
    }//GEN-LAST:event_btnTop10ActionPerformed

    private void btnUserAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUserAddActionPerformed
        int id = Integer.parseInt(fldUserID.getText());
        if(admin.getUser(id).getSubscription() == 1 && id != this.user.getId()) {
            boolean control = admin.insertFollow(this.user.getId(), id);
            updateFollowTable();
            if(control) {
                fldUserID.setText(null);
            }
        } else if(id == this.user.getId()) {
            JOptionPane.showMessageDialog(null, "Kendini talip edemezsin!");
        } else {
            JOptionPane.showMessageDialog(null, "Normal Hesap türüne sahip kullanıcılar takip edilemez!");
        }
    }//GEN-LAST:event_btnUserAddActionPerformed

    private void tblUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblUsersMouseClicked
        fldUserID.setText(tblUsers.getValueAt(tblUsers.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblUsersMouseClicked

    private void tblFolUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFolUsersMouseClicked
        int id = Integer.parseInt(tblFolUsers.getValueAt(tblFolUsers.getSelectedRow(), 0).toString());
        fldFolUsersID.setText(tblFolUsers.getValueAt(tblFolUsers.getSelectedRow(), 0).toString());
        updateFolPopModel(id);
        updateFolJazzModel(id);
        updateFolClasssicModel(id);
    }//GEN-LAST:event_tblFolUsersMouseClicked

    private void btnFolUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFolUsersActionPerformed
        boolean control = admin.deleteFollow(this.user.getId(), Integer.parseInt(fldFolUsersID.getText()));
        updateFollowTable();

        if(control) {
            fldFolUsersID.setText(null);
        }
    }//GEN-LAST:event_btnFolUsersActionPerformed

    private void btnFolClasAllAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFolClasAllAddActionPerformed
        int user2Id = Integer.parseInt(tblFolUsers.getValueAt(tblFolUsers.getSelectedRow(), 0).toString());
        boolean control = admin.insertAllClassic(this.user.getId(), user2Id);

        updateClassicModel();

        if(control) {

        }
    }//GEN-LAST:event_btnFolClasAllAddActionPerformed

    private void tblFolClassMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFolClassMouseClicked
        fldFolClasID.setText(tblFolClass.getValueAt(tblFolClass.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblFolClassMouseClicked

    private void btnFolClasAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFolClasAddActionPerformed
        int songId = Integer.parseInt(fldFolClasID.getText());
        boolean control = admin.insertClassic(this.user.getId(), songId);
        updateClassicModel();

        if(control) {
            fldFolClasID.setText(null);
        }
    }//GEN-LAST:event_btnFolClasAddActionPerformed

    private void btnFolJazzAllAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFolJazzAllAddActionPerformed
        int user2Id = Integer.parseInt(tblFolUsers.getValueAt(tblFolUsers.getSelectedRow(), 0).toString());
        boolean control = admin.insertAllJazz(this.user.getId(), user2Id);

        updateJazzModel();

        if(control) {

        }
    }//GEN-LAST:event_btnFolJazzAllAddActionPerformed

    private void tblFolJazzMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFolJazzMouseClicked
        fldFolJazzID.setText(tblFolJazz.getValueAt(tblFolJazz.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblFolJazzMouseClicked

    private void btnFolJazzAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFolJazzAddActionPerformed
        int songId = Integer.parseInt(fldFolJazzID.getText());
        boolean control = admin.insertJazz(this.user.getId(), songId);
        updateJazzModel();

        if(control) {
            fldFolJazzID.setText(null);
        }
    }//GEN-LAST:event_btnFolJazzAddActionPerformed

    private void btnFolPopAllAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFolPopAllAddActionPerformed
        int user2Id = Integer.parseInt(tblFolUsers.getValueAt(tblFolUsers.getSelectedRow(), 0).toString());
        boolean control = admin.insertAllPop(this.user.getId(), user2Id);

        updatePopModel();

        if(control) {

        }
    }//GEN-LAST:event_btnFolPopAllAddActionPerformed

    private void btnFolPopAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFolPopAddActionPerformed
        int songId = Integer.parseInt(fldFolPopID.getText());
        boolean control = admin.insertPop(this.user.getId(), songId);
        updatePopModel();

        if(control) {
            fldFolPopID.setText(null);
        }
    }//GEN-LAST:event_btnFolPopAddActionPerformed

    private void tblFolPopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblFolPopMouseClicked
        fldFolPopID.setText(tblFolPop.getValueAt(tblFolPop.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblFolPopMouseClicked

    private void btnPlaylistClassicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaylistClassicActionPerformed
        boolean control = admin.deleteClassic(this.user.getId(), Integer.parseInt(fldPlaylistClassicID.getText()));
        updateClassicModel();
        if(control) {
            fldPlaylistClassicID.setText(null);
        }
    }//GEN-LAST:event_btnPlaylistClassicActionPerformed

    private void btnPlaylistJazzActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaylistJazzActionPerformed
        boolean control = admin.deleteJazz(this.user.getId(), Integer.parseInt(fldPlaylistJazzID.getText()));
        updateJazzModel();
        if(control) {
            fldPlaylistJazzID.setText(null);
        }
    }//GEN-LAST:event_btnPlaylistJazzActionPerformed

    private void btnPlaylistPopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlaylistPopActionPerformed
        boolean control = admin.deletePop(this.user.getId(), Integer.parseInt(fldPlaylistPopID.getText()));
        updatePopModel();
        if(control) {
            fldPlaylistPopID.setText(null);
        }
    }//GEN-LAST:event_btnPlaylistPopActionPerformed

    private void tblPlaylistClassicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPlaylistClassicMouseClicked
        fldPlaylistClassicID.setText(tblPlaylistClassic.getValueAt(tblPlaylistClassic.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblPlaylistClassicMouseClicked

    private void tblPlaylistJazzMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPlaylistJazzMouseClicked
        fldPlaylistJazzID.setText(tblPlaylistJazz.getValueAt(tblPlaylistJazz.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblPlaylistJazzMouseClicked

    private void tblPlaylistPopMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPlaylistPopMouseClicked
        fldPlaylistPopID.setText(tblPlaylistPop.getValueAt(tblPlaylistPop.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblPlaylistPopMouseClicked

    private void tblSongsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSongsMouseClicked
        fldSongsID.setText(tblSongs.getValueAt(tblSongs.getSelectedRow(), 0).toString());
        lblSongsPlayName.setText(tblSongs.getValueAt(tblSongs.getSelectedRow(), 1).toString());
        lblSongsPlayDrt.setText(tblSongs.getValueAt(tblSongs.getSelectedRow(), 6).toString());
    }//GEN-LAST:event_tblSongsMouseClicked

    private void btnSongsAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSongsAddActionPerformed
        Song song = admin.getSong(Integer.parseInt(fldSongsID.getText()));

        if(song.getGenreID() == 1) {
            int songId = Integer.parseInt(fldSongsID.getText());
            boolean control = admin.insertPop(this.user.getId(), songId);
            updatePopModel();

            if(control) {
                fldFolPopID.setText(null);
            }
        } else if(song.getGenreID()==2) {
            int songId = Integer.parseInt(fldSongsID.getText());
            boolean control = admin.insertJazz(this.user.getId(), songId);
            updateJazzModel();

            if(control) {
                fldFolJazzID.setText(null);
            }
        } else {
            int songId = Integer.parseInt(fldSongsID.getText());
            boolean control = admin.insertClassic(this.user.getId(), songId);
            updateClassicModel();

            if(control) {
                fldFolClasID.setText(null);
            }
        }
    }//GEN-LAST:event_btnSongsAddActionPerformed

    private void tblTop10AllMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTop10AllMouseClicked
        fldTop10All.setText(tblTop10All.getValueAt(tblTop10All.getSelectedRow(), 0).toString());
    }//GEN-LAST:event_tblTop10AllMouseClicked

    private void btnTop10AllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTop10AllActionPerformed
        Song song = admin.getSong(Integer.parseInt(fldTop10All.getText()));

        if(song.getGenreID() == 1) {
            int songId = Integer.parseInt(fldTop10All.getText());
            boolean control = admin.insertPop(this.user.getId(), songId);
            updatePopModel();

            if(control) {
                fldTop10All.setText(null);
            }
        } else if(song.getGenreID()==2) {
            int songId = Integer.parseInt(fldTop10All.getText());
            boolean control = admin.insertJazz(this.user.getId(), songId);
            updateJazzModel();

            if(control) {
                fldTop10All.setText(null);
            }
        } else {
            int songId = Integer.parseInt(fldTop10All.getText());
            boolean control = admin.insertClassic(this.user.getId(), songId);
            updateClassicModel();

            if(control) {
                fldTop10All.setText(null);
            }
        }
    }//GEN-LAST:event_btnTop10AllActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UserGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UserGUI().setVisible(true);
            }
        });
    }
    
    private void setPopModel() {
        popModel = new DefaultTableModel();
        Object[] colPop = new Object[8];
        colPop[0] = "ID";
        colPop[1] = "Ad";
        colPop[2] = "Tarih";
        colPop[3] = "Sanatçı";
        colPop[4] = "Albüm";
        colPop[5] = "Tür";
        colPop[6] = "Süre";
        colPop[7] = "Dinleme";
        
        popModel.setColumnIdentifiers(colPop);
        popData = new Object[8];
        for(int i=0; i<admin.getPopList(this.user.getId()).size(); i++) {
            Artist artist = admin.getArtist(admin.getPopList(this.user.getId()).get(i).getArtistID());
            Album album = admin.getAlbum(admin.getPopList(this.user.getId()).get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getPopList(this.user.getId()).get(i).getGenreID());
            popData[0] = admin.getPopList(this.user.getId()).get(i).getId();
            popData[1] = admin.getPopList(this.user.getId()).get(i).getName();
            popData[2] = admin.getPopList(this.user.getId()).get(i).getDate();
            popData[3] = artist.getName()+artist.getSname();
            popData[4] = album.getName();
            popData[5] = genre.getName();
            popData[6] = admin.getPopList(this.user.getId()).get(i).getDuration();
            popData[7] = admin.getPopList(this.user.getId()).get(i).getPlays();

            popModel.addRow(popData);
        }
            
        tblPlaylistPop.setModel(popModel);
    }
    
    private void updatePopModel() {
        
        DefaultTableModel clearModel = (DefaultTableModel)tblPlaylistPop.getModel();
        clearModel.setRowCount(0);
        
        for(int i=0; i<admin.getPopList(this.user.getId()).size(); i++) {
            Artist artist = admin.getArtist(admin.getPopList(this.user.getId()).get(i).getArtistID());
            Album album = admin.getAlbum(admin.getPopList(this.user.getId()).get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getPopList(this.user.getId()).get(i).getGenreID());
            popData[0] = admin.getPopList(this.user.getId()).get(i).getId();
            popData[1] = admin.getPopList(this.user.getId()).get(i).getName();
            popData[2] = admin.getPopList(this.user.getId()).get(i).getDate();
            popData[3] = artist.getName()+artist.getSname();
            popData[4] = album.getName();
            popData[5] = genre.getName();
            popData[6] = admin.getPopList(this.user.getId()).get(i).getDuration();
            popData[7] = admin.getPopList(this.user.getId()).get(i).getPlays();

            popModel.addRow(popData);
        }
    }
    
    private void setJazzModel() {
        jazzModel = new DefaultTableModel();
        Object[] colJazz = new Object[8];
        colJazz[0] = "ID";
        colJazz[1] = "Ad";
        colJazz[2] = "Tarih";
        colJazz[3] = "Sanatçı";
        colJazz[4] = "Albüm";
        colJazz[5] = "Tür";
        colJazz[6] = "Süre";
        colJazz[7] = "Dinleme";
        
        jazzModel.setColumnIdentifiers(colJazz);
        jazzData = new Object[8];
        for(int i=0; i<admin.getJazzList(this.user.getId()).size(); i++) {
            Artist artist = admin.getArtist(admin.getJazzList(this.user.getId()).get(i).getArtistID());
            Album album = admin.getAlbum(admin.getJazzList(this.user.getId()).get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getJazzList(this.user.getId()).get(i).getGenreID());
            jazzData[0] = admin.getJazzList(this.user.getId()).get(i).getId();
            jazzData[1] = admin.getJazzList(this.user.getId()).get(i).getName();
            jazzData[2] = admin.getJazzList(this.user.getId()).get(i).getDate();
            jazzData[3] = artist.getName()+artist.getSname();
            jazzData[4] = album.getName();
            jazzData[5] = genre.getName();
            jazzData[6] = admin.getJazzList(this.user.getId()).get(i).getDuration();
            jazzData[7] = admin.getJazzList(this.user.getId()).get(i).getPlays();

            jazzModel.addRow(jazzData);
        }
            
        tblPlaylistJazz.setModel(jazzModel);
    }
    
    private void updateJazzModel() {
        DefaultTableModel clearModel = (DefaultTableModel)tblPlaylistJazz.getModel();
        clearModel.setRowCount(0);
        
        for(int i=0; i<admin.getJazzList(this.user.getId()).size(); i++) {
            Artist artist = admin.getArtist(admin.getJazzList(this.user.getId()).get(i).getArtistID());
            Album album = admin.getAlbum(admin.getJazzList(this.user.getId()).get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getJazzList(this.user.getId()).get(i).getGenreID());
            jazzData[0] = admin.getJazzList(this.user.getId()).get(i).getId();
            jazzData[1] = admin.getJazzList(this.user.getId()).get(i).getName();
            jazzData[2] = admin.getJazzList(this.user.getId()).get(i).getDate();
            jazzData[3] = artist.getName()+artist.getSname();
            jazzData[4] = album.getName();
            jazzData[5] = genre.getName();
            jazzData[6] = admin.getJazzList(this.user.getId()).get(i).getDuration();
            jazzData[7] = admin.getJazzList(this.user.getId()).get(i).getPlays();

            jazzModel.addRow(jazzData);
        }
    }
    
    private void setClassicModel() {
        classicModel = new DefaultTableModel();
        Object[] colClassic = new Object[8];
        colClassic[0] = "ID";
        colClassic[1] = "Ad";
        colClassic[2] = "Tarih";
        colClassic[3] = "Sanatçı";
        colClassic[4] = "Albüm";
        colClassic[5] = "Tür";
        colClassic[6] = "Süre";
        colClassic[7] = "Dinleme";
        
        classicModel.setColumnIdentifiers(colClassic);
        classicData = new Object[8];
        for(int i=0; i<admin.getClassicList(this.user.getId()).size(); i++) {
            Artist artist = admin.getArtist(admin.getClassicList(this.user.getId()).get(i).getArtistID());
            Album album = admin.getAlbum(admin.getClassicList(this.user.getId()).get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getClassicList(this.user.getId()).get(i).getGenreID());
            classicData[0] = admin.getClassicList(this.user.getId()).get(i).getId();
            classicData[1] = admin.getClassicList(this.user.getId()).get(i).getName();
            classicData[2] = admin.getClassicList(this.user.getId()).get(i).getDate();
            classicData[3] = artist.getName()+artist.getSname();
            classicData[4] = album.getName();
            classicData[5] = genre.getName();
            classicData[6] = admin.getClassicList(this.user.getId()).get(i).getDuration();
            classicData[7] = admin.getClassicList(this.user.getId()).get(i).getPlays();

            classicModel.addRow(classicData);
        }
            
        tblPlaylistClassic.setModel(classicModel);
    }
    
    private void updateClassicModel() {
        DefaultTableModel clearModel = (DefaultTableModel)tblPlaylistClassic.getModel();
        clearModel.setRowCount(0);
        
        for(int i=0; i<admin.getClassicList(this.user.getId()).size(); i++) {
            Artist artist = admin.getArtist(admin.getClassicList(this.user.getId()).get(i).getArtistID());
            Album album = admin.getAlbum(admin.getClassicList(this.user.getId()).get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getClassicList(this.user.getId()).get(i).getGenreID());
            classicData[0] = admin.getClassicList(this.user.getId()).get(i).getId();
            classicData[1] = admin.getClassicList(this.user.getId()).get(i).getName();
            classicData[2] = admin.getClassicList(this.user.getId()).get(i).getDate();
            classicData[3] = artist.getName()+artist.getSname();
            classicData[4] = album.getName();
            classicData[5] = genre.getName();
            classicData[6] = admin.getClassicList(this.user.getId()).get(i).getDuration();
            classicData[7] = admin.getClassicList(this.user.getId()).get(i).getPlays();

            classicModel.addRow(classicData);
        }
    }
    
    private void setFolPopModel() {
        folPopModel = new DefaultTableModel();
        Object[] colFolPop = new Object[8];
        colFolPop[0] = "ID";
        colFolPop[1] = "Ad";
        colFolPop[2] = "Tarih";
        colFolPop[3] = "Sanatçı";
        colFolPop[4] = "Albüm";
        colFolPop[5] = "Tür";
        colFolPop[6] = "Süre";
        colFolPop[7] = "Dinleme";
        
        folPopModel.setColumnIdentifiers(colFolPop);    
        tblFolPop.setModel(folPopModel);
    }
    
    private void updateFolPopModel(int id) {
        DefaultTableModel clearModel = (DefaultTableModel)tblFolPop.getModel();
        clearModel.setRowCount(0);
        
        folPopData = new Object[8];
        for(int i=0; i<admin.getPopList(id).size(); i++) {
            Artist artist = admin.getArtist(admin.getPopList(id).get(i).getArtistID());
            Album album = admin.getAlbum(admin.getPopList(id).get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getPopList(id).get(i).getGenreID());
            folPopData[0] = admin.getPopList(id).get(i).getId();
            folPopData[1] = admin.getPopList(id).get(i).getName();
            folPopData[2] = admin.getPopList(id).get(i).getDate();
            folPopData[3] = artist.getName()+artist.getSname();
            folPopData[4] = album.getName();
            folPopData[5] = genre.getName();
            folPopData[6] = admin.getPopList(id).get(i).getDuration();
            folPopData[7] = admin.getPopList(id).get(i).getPlays();

            folPopModel.addRow(folPopData);
        }
    }
    
    private void setFolJazzModel() {
        folJazzModel = new DefaultTableModel();
        Object[] colFolJazz = new Object[8];
        colFolJazz[0] = "ID";
        colFolJazz[1] = "Ad";
        colFolJazz[2] = "Tarih";
        colFolJazz[3] = "Sanatçı";
        colFolJazz[4] = "Albüm";
        colFolJazz[5] = "Tür";
        colFolJazz[6] = "Süre";
        colFolJazz[7] = "Dinleme";
        
        folJazzModel.setColumnIdentifiers(colFolJazz);
            
        tblFolJazz.setModel(folJazzModel);
    }
    
    private void updateFolJazzModel(int id) {
        DefaultTableModel clearModel = (DefaultTableModel)tblFolJazz.getModel();
        clearModel.setRowCount(0);
        
        folJazzData = new Object[8];
        for(int i=0; i<admin.getJazzList(id).size(); i++) {
            Artist artist = admin.getArtist(admin.getJazzList(id).get(i).getArtistID());
            Album album = admin.getAlbum(admin.getJazzList(id).get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getJazzList(id).get(i).getGenreID());
            folJazzData[0] = admin.getJazzList(id).get(i).getId();
            folJazzData[1] = admin.getJazzList(id).get(i).getName();
            folJazzData[2] = admin.getJazzList(id).get(i).getDate();
            folJazzData[3] = artist.getName()+artist.getSname();
            folJazzData[4] = album.getName();
            folJazzData[5] = genre.getName();
            folJazzData[6] = admin.getJazzList(id).get(i).getDuration();
            folJazzData[7] = admin.getJazzList(id).get(i).getPlays();

            folJazzModel.addRow(folJazzData);
        }
    }
    
    private void setFolClassicModel() {
        folClassicModel = new DefaultTableModel();
        Object[] colFolClassic = new Object[8];
        colFolClassic[0] = "ID";
        colFolClassic[1] = "Ad";
        colFolClassic[2] = "Tarih";
        colFolClassic[3] = "Sanatçı";
        colFolClassic[4] = "Albüm";
        colFolClassic[5] = "Tür";
        colFolClassic[6] = "Süre";
        colFolClassic[7] = "Dinleme";
        
        folClassicModel.setColumnIdentifiers(colFolClassic);    
        tblFolClass.setModel(folClassicModel);
    }
    
    private void updateFolClasssicModel(int id) {
        DefaultTableModel clearModel = (DefaultTableModel)tblFolClass.getModel();
        clearModel.setRowCount(0);
        
        folClassicData = new Object[8];
        for(int i=0; i<admin.getClassicList(id).size(); i++) {
            Artist artist = admin.getArtist(admin.getClassicList(id).get(i).getArtistID());
            Album album = admin.getAlbum(admin.getClassicList(id).get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getClassicList(id).get(i).getGenreID());
            folClassicData[0] = admin.getClassicList(id).get(i).getId();
            folClassicData[1] = admin.getClassicList(id).get(i).getName();
            folClassicData[2] = admin.getClassicList(id).get(i).getDate();
            folClassicData[3] = artist.getName()+artist.getSname();
            folClassicData[4] = album.getName();
            folClassicData[5] = genre.getName();
            folClassicData[6] = admin.getClassicList(id).get(i).getDuration();
            folClassicData[7] = admin.getClassicList(id).get(i).getPlays();

            folClassicModel.addRow(folClassicData);
        }
    }
    
    private void setSongModel() {
        songModel = new DefaultTableModel();
        Object[] colSong = new Object[8];
        colSong[0] = "ID";
        colSong[1] = "Ad";
        colSong[2] = "Tarih";
        colSong[3] = "Sanatçı";
        colSong[4] = "Albüm";
        colSong[5] = "Tür";
        colSong[6] = "Süre";
        colSong[7] = "Dinleme";
        
        songModel.setColumnIdentifiers(colSong);
        songData = new Object[8];
        for(int i=0; i<admin.getSongList().size(); i++) {
            Artist artist = admin.getArtist(admin.getSongList().get(i).getArtistID());
            Album album = admin.getAlbum(admin.getSongList().get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getSongList().get(i).getGenreID());
            songData[0] = admin.getSongList().get(i).getId();
            songData[1] = admin.getSongList().get(i).getName();
            songData[2] = admin.getSongList().get(i).getDate();
            songData[3] = artist.getName()+artist.getSname();
            songData[4] = album.getName();
            songData[5] = genre.getName();
            songData[6] = admin.getSongList().get(i).getDuration();
            songData[7] = admin.getSongList().get(i).getPlays();

            songModel.addRow(songData);
        }
            
        tblSongs.setModel(songModel);
    }
    
    private void setUserModel() {
        userModel = new DefaultTableModel();
        Object[] colUser = new Object[5];
        colUser[0] = "ID";
        colUser[1] = "Ad";
        colUser[2] = "Soyad";
        colUser[3] = "Abonelik";
        colUser[4] = "Ülke";
        
        userModel.setColumnIdentifiers(colUser);
        userData = new Object[5];
        for(int i=0; i<admin.getUserList().size(); i++) {
            SubsType subsType = admin.getSubsType(admin.getUserList().get(i).getSubscription());
            userData[0] = admin.getUserList().get(i).getId();
            userData[1] = admin.getUserList().get(i).getName();
            userData[2] = admin.getUserList().get(i).getSname();   
            userData[3] = subsType.getName();              
            userData[4] = admin.getUserList().get(i).getCountry();
            userModel.addRow(userData);
        }
            
        tblUsers.setModel(userModel);
    }
    
    private void updateUserTable() {
        DefaultTableModel clearModel = (DefaultTableModel)tblUsers.getModel();
        clearModel.setRowCount(0);
        
        for(int i=0; i<admin.getUserList().size(); i++) {
            SubsType subsType = admin.getSubsType(admin.getUserList().get(i).getSubscription());
            userData[0] = admin.getUserList().get(i).getId();
            userData[1] = admin.getUserList().get(i).getName();
            userData[2] = admin.getUserList().get(i).getSname();
            userData[3] = subsType.getName();
            userData[4] = admin.getUserList().get(i).getCountry();
            userModel.addRow(userData);
        }
    }
    
    private void setFollowModel() {
        followModel = new DefaultTableModel();
        Object[] colFollow = new Object[5];
        colFollow[0] = "ID";
        colFollow[1] = "Ad";
        colFollow[2] = "Soyad";
        colFollow[3] = "Abonelik";
        colFollow[4] = "Ülke";
        
        followModel.setColumnIdentifiers(colFollow);
        followData = new Object[5];
        for(int i=0; i<admin.getFollowList(this.user.getId()).size(); i++) {
            SubsType subsType = admin.getSubsType(admin.getFollowList(this.user.getId()).get(i).getSubscription());
            followData[0] = admin.getFollowList(this.user.getId()).get(i).getId();
            followData[1] = admin.getFollowList(this.user.getId()).get(i).getName();
            followData[2] = admin.getFollowList(this.user.getId()).get(i).getSname();   
            followData[3] = subsType.getName();              
            followData[4] = admin.getFollowList(this.user.getId()).get(i).getCountry();
            followModel.addRow(followData);
        }
            
        tblFolUsers.setModel(followModel);
    }
    
    private void updateFollowTable() {
        DefaultTableModel clearModel = (DefaultTableModel)tblFolUsers.getModel();
        clearModel.setRowCount(0);
        
        for(int i=0; i<admin.getFollowList(this.user.getId()).size(); i++) {
            SubsType subsType = admin.getSubsType(admin.getFollowList(this.user.getId()).get(i).getSubscription());
            followData[0] = admin.getFollowList(this.user.getId()).get(i).getId();
            followData[1] = admin.getFollowList(this.user.getId()).get(i).getName();
            followData[2] = admin.getFollowList(this.user.getId()).get(i).getSname();   
            followData[3] = subsType.getName();             
            followData[4] = admin.getFollowList(this.user.getId()).get(i).getCountry();
            followModel.addRow(followData);
        }
    } 
    
    private void setTop10Model() {
        top10Model = new DefaultTableModel();
        Object[] coltop10 = new Object[8];
        coltop10[0] = "ID";
        coltop10[1] = "Ad";
        coltop10[2] = "Tarih";
        coltop10[3] = "Sanatçı";
        coltop10[4] = "Albüm";
        coltop10[5] = "Tür";
        coltop10[6] = "Süre";
        coltop10[7] = "Dinleme";
        
        top10Model.setColumnIdentifiers(coltop10);
        top10Data = new Object[8];
        for(int i=0; i<admin.getTop10List(this.user.getCountry()).size(); i++) {
            Artist artist = admin.getArtist(admin.getTop10List(this.user.getCountry()).get(i).getArtistID());
            Album album = admin.getAlbum(admin.getTop10List(this.user.getCountry()).get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getTop10List(this.user.getCountry()).get(i).getGenreID());
            top10Data[0] = admin.getTop10List(this.user.getCountry()).get(i).getId();
            top10Data[1] = admin.getTop10List(this.user.getCountry()).get(i).getName();
            top10Data[2] = admin.getTop10List(this.user.getCountry()).get(i).getDate();
            top10Data[3] = artist.getName()+artist.getSname();
            top10Data[4] = album.getName();
            top10Data[5] = genre.getName();
            top10Data[6] = admin.getTop10List(this.user.getCountry()).get(i).getDuration();
            top10Data[7] = admin.getTop10List(this.user.getCountry()).get(i).getPlays();

            top10Model.addRow(top10Data);
            
            if(i==9) {
                break;
            }
        }
        
        lblTop10Country.setText(this.user.getCountry());
        tblTop10.setModel(top10Model);
    }
    
    private void setTop10AllModel() {
        top10AllModel = new DefaultTableModel();
        Object[] coltop10All = new Object[8];
        coltop10All[0] = "ID";
        coltop10All[1] = "Ad";
        coltop10All[2] = "Tarih";
        coltop10All[3] = "Sanatçı";
        coltop10All[4] = "Albüm";
        coltop10All[5] = "Tür";
        coltop10All[6] = "Süre";
        coltop10All[7] = "Dinleme";
        
        top10AllModel.setColumnIdentifiers(coltop10All);
        top10AllData = new Object[8];
        for(int i=0; i<admin.getTop10AllList().size(); i++) {
            Artist artist = admin.getArtist(admin.getTop10AllList().get(i).getArtistID());
            Album album = admin.getAlbum(admin.getTop10AllList().get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getTop10AllList().get(i).getGenreID());
            top10AllData[0] = admin.getTop10AllList().get(i).getId();
            top10AllData[1] = admin.getTop10AllList().get(i).getName();
            top10AllData[2] = admin.getTop10AllList().get(i).getDate();
            top10AllData[3] = artist.getName()+artist.getSname();
            top10AllData[4] = album.getName();
            top10AllData[5] = genre.getName();
            top10AllData[6] = admin.getTop10AllList().get(i).getDuration();
            top10AllData[7] = admin.getTop10AllList().get(i).getPlays();

            top10AllModel.addRow(top10AllData);
            
            if(i==9) {
                break;
            }
        }

        tblTop10All.setModel(top10AllModel);
    }
    
    private void setTop10PopModel() {
        top10PopModel = new DefaultTableModel();
        Object[] coltop10Pop = new Object[8];
        coltop10Pop[0] = "ID";
        coltop10Pop[1] = "Ad";
        coltop10Pop[2] = "Tarih";
        coltop10Pop[3] = "Sanatçı";
        coltop10Pop[4] = "Albüm";
        coltop10Pop[5] = "Tür";
        coltop10Pop[6] = "Süre";
        coltop10Pop[7] = "Dinleme";
        
        top10PopModel.setColumnIdentifiers(coltop10Pop);
        top10PopData = new Object[8];
        for(int i=0; i<admin.getTop10PopList().size(); i++) {
            Artist artist = admin.getArtist(admin.getTop10PopList().get(i).getArtistID());
            Album album = admin.getAlbum(admin.getTop10PopList().get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getTop10PopList().get(i).getGenreID());
            top10PopData[0] = admin.getTop10PopList().get(i).getId();
            top10PopData[1] = admin.getTop10PopList().get(i).getName();
            top10PopData[2] = admin.getTop10PopList().get(i).getDate();
            top10PopData[3] = artist.getName()+artist.getSname();
            top10PopData[4] = album.getName();
            top10PopData[5] = genre.getName();
            top10PopData[6] = admin.getTop10PopList().get(i).getDuration();
            top10PopData[7] = admin.getTop10PopList().get(i).getPlays();

            top10PopModel.addRow(top10PopData);
            
            if(i==9) {
                break;
            }
        }

        tblTop10PlaylistPop.setModel(top10PopModel);
    }
    
    private void setTop10JazzModel() {
        top10JazzModel = new DefaultTableModel();
        Object[] coltop10Jazz = new Object[8];
        coltop10Jazz[0] = "ID";
        coltop10Jazz[1] = "Ad";
        coltop10Jazz[2] = "Tarih";
        coltop10Jazz[3] = "Sanatçı";
        coltop10Jazz[4] = "Albüm";
        coltop10Jazz[5] = "Tür";
        coltop10Jazz[6] = "Süre";
        coltop10Jazz[7] = "Dinleme";
        
        top10JazzModel.setColumnIdentifiers(coltop10Jazz);
        top10JazzData = new Object[8];
        for(int i=0; i<admin.getTop10JazzList().size(); i++) {
            Artist artist = admin.getArtist(admin.getTop10JazzList().get(i).getArtistID());
            Album album = admin.getAlbum(admin.getTop10JazzList().get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getTop10JazzList().get(i).getGenreID());
            top10JazzData[0] = admin.getTop10JazzList().get(i).getId();
            top10JazzData[1] = admin.getTop10JazzList().get(i).getName();
            top10JazzData[2] = admin.getTop10JazzList().get(i).getDate();
            top10JazzData[3] = artist.getName()+artist.getSname();
            top10JazzData[4] = album.getName();
            top10JazzData[5] = genre.getName();
            top10JazzData[6] = admin.getTop10JazzList().get(i).getDuration();
            top10JazzData[7] = admin.getTop10JazzList().get(i).getPlays();

            top10JazzModel.addRow(top10JazzData);
            
            if(i==9) {
                break;
            }
        }

        tblTop10PlaylistJazz.setModel(top10JazzModel);
    }
    
    private void setTop10ClassicModel() {
        top10ClassicModel = new DefaultTableModel();
        Object[] coltop10Classic = new Object[8];
        coltop10Classic[0] = "ID";
        coltop10Classic[1] = "Ad";
        coltop10Classic[2] = "Tarih";
        coltop10Classic[3] = "Sanatçı";
        coltop10Classic[4] = "Albüm";
        coltop10Classic[5] = "Tür";
        coltop10Classic[6] = "Süre";
        coltop10Classic[7] = "Dinleme";
        
        top10ClassicModel.setColumnIdentifiers(coltop10Classic);
        top10ClassicData = new Object[8];
        for(int i=0; i<admin.getTop10ClassicList().size(); i++) {
            Artist artist = admin.getArtist(admin.getTop10ClassicList().get(i).getArtistID());
            Album album = admin.getAlbum(admin.getTop10ClassicList().get(i).getAlbumID());
            SongGenre genre = admin.getGenre(admin.getTop10ClassicList().get(i).getGenreID());
            top10ClassicData[0] = admin.getTop10ClassicList().get(i).getId();
            top10ClassicData[1] = admin.getTop10ClassicList().get(i).getName();
            top10ClassicData[2] = admin.getTop10ClassicList().get(i).getDate();
            top10ClassicData[3] = artist.getName()+artist.getSname();
            top10ClassicData[4] = album.getName();
            top10ClassicData[5] = genre.getName();
            top10ClassicData[6] = admin.getTop10ClassicList().get(i).getDuration();
            top10ClassicData[7] = admin.getTop10ClassicList().get(i).getPlays();

            top10ClassicModel.addRow(top10ClassicData);
            
            if(i==9) {
                break;
            }
        }

        tblTop10PlaylistClassic.setModel(top10ClassicModel);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFolClasAdd;
    private javax.swing.JButton btnFolClasAllAdd;
    private javax.swing.JButton btnFolJazzAdd;
    private javax.swing.JButton btnFolJazzAllAdd;
    private javax.swing.JButton btnFolPopAdd;
    private javax.swing.JButton btnFolPopAllAdd;
    private javax.swing.JButton btnFolUsers;
    private javax.swing.JButton btnPlaylistClassic;
    private javax.swing.JButton btnPlaylistJazz;
    private javax.swing.JButton btnPlaylistPop;
    private javax.swing.JButton btnSongsAdd;
    private javax.swing.JButton btnSongsPlay;
    private javax.swing.JButton btnTop10;
    private javax.swing.JButton btnTop10All;
    private javax.swing.JButton btnTop10PlaylistClassic;
    private javax.swing.JButton btnTop10PlaylistJazz;
    private javax.swing.JButton btnTop10PlaylistPop;
    private javax.swing.JButton btnUserAdd;
    private javax.swing.JTextField fldFolClasID;
    private javax.swing.JTextField fldFolJazzID;
    private javax.swing.JTextField fldFolPopID;
    private javax.swing.JTextField fldFolUsersID;
    private javax.swing.JTextField fldPlaylistClassicID;
    private javax.swing.JTextField fldPlaylistJazzID;
    private javax.swing.JTextField fldPlaylistPopID;
    private javax.swing.JTextField fldSongsID;
    private javax.swing.JTextField fldTop10All;
    private javax.swing.JTextField fldTop10ID;
    private javax.swing.JTextField fldTop10PlaylistClassicID;
    private javax.swing.JTextField fldTop10PlaylistJazzID;
    private javax.swing.JTextField fldTop10PlaylistPopID;
    private javax.swing.JTextField fldUserID;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lblFolClasID;
    private javax.swing.JLabel lblFolClassics;
    private javax.swing.JLabel lblFolJazz;
    private javax.swing.JLabel lblFolJazzID;
    private javax.swing.JLabel lblFolPop;
    private javax.swing.JLabel lblFolPopID;
    private javax.swing.JLabel lblFolUsersID;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblPlaylistClassic;
    private javax.swing.JLabel lblPlaylistClassicID;
    private javax.swing.JLabel lblPlaylistJazz;
    private javax.swing.JLabel lblPlaylistJazzID;
    private javax.swing.JLabel lblPlaylistPop;
    private javax.swing.JLabel lblPlaylistPopID;
    private javax.swing.JLabel lblSongsID;
    private javax.swing.JLabel lblSongsPlayDrt;
    private javax.swing.JLabel lblSongsPlayName;
    private javax.swing.JLabel lblSoundguin;
    private javax.swing.JLabel lblSubs;
    private javax.swing.JLabel lblTop10All;
    private javax.swing.JLabel lblTop10Country;
    private javax.swing.JLabel lblTop10ID;
    private javax.swing.JLabel lblTop10PlaylistClassic;
    private javax.swing.JLabel lblTop10PlaylistClassicID;
    private javax.swing.JLabel lblTop10PlaylistJazz;
    private javax.swing.JLabel lblTop10PlaylistJazzID;
    private javax.swing.JLabel lblTop10PlaylistPop;
    private javax.swing.JLabel lblTop10PlaylistPopID;
    private javax.swing.JLabel lblUserID;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblWelcome;
    private javax.swing.JPanel pnlFollowings;
    private javax.swing.JPanel pnlPlaylists;
    private javax.swing.JPanel pnlSongs;
    private javax.swing.JPanel pnlSongsPlay;
    private javax.swing.JPanel pnlTop10;
    private javax.swing.JPanel pnlTop10Playlists;
    private javax.swing.JPanel pnlUser;
    private javax.swing.JPanel pnlUsers;
    private javax.swing.JPanel pnlWelcome;
    private javax.swing.JScrollPane scrllFolClas;
    private javax.swing.JScrollPane scrllFolJazz;
    private javax.swing.JScrollPane scrllFolPop;
    private javax.swing.JScrollPane scrllFolUsers;
    private javax.swing.JScrollPane scrllPlaylistClassic;
    private javax.swing.JScrollPane scrllPlaylistJazz;
    private javax.swing.JScrollPane scrllPlaylistPop;
    private javax.swing.JScrollPane scrllSongs;
    private javax.swing.JScrollPane scrllTop10;
    private javax.swing.JScrollPane scrllTop10All;
    private javax.swing.JScrollPane scrllTop10PlaylistClassic;
    private javax.swing.JScrollPane scrllTop10PlaylistJazz;
    private javax.swing.JScrollPane scrllTop10PlaylistPop;
    private javax.swing.JScrollPane scrllUsers;
    private javax.swing.JTable tblFolClass;
    private javax.swing.JTable tblFolJazz;
    private javax.swing.JTable tblFolPop;
    private javax.swing.JTable tblFolUsers;
    private javax.swing.JTable tblPlaylistClassic;
    private javax.swing.JTable tblPlaylistJazz;
    private javax.swing.JTable tblPlaylistPop;
    private javax.swing.JTable tblSongs;
    private javax.swing.JTable tblTop10;
    private javax.swing.JTable tblTop10All;
    private javax.swing.JTable tblTop10PlaylistClassic;
    private javax.swing.JTable tblTop10PlaylistJazz;
    private javax.swing.JTable tblTop10PlaylistPop;
    private javax.swing.JTable tblUsers;
    // End of variables declaration//GEN-END:variables
}
